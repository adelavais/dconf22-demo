/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */
module Google.Apis.Drive.v3.Data.Change;

import vibe.data.json: optional;
import std.typecons: Nullable;
import std.datetime : SysTime;
import std.conv: to;

import Google.Apis.Drive.v3.DriveMyNullable;

import Google.Apis.Drive.v3.Data.Drive;
import Google.Apis.Drive.v3.Data.File;
import Google.Apis.Drive.v3.Data.TeamDrive;

/**
 * A change to a file or shared drive.
 *
 * This is the D data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Drive API. For a detailed explanation see:
 *
 *
 * @author Robert Aron.
 */
public struct Change {

  /**
   * The type of the change. Possible values are file and drive.
   * The value may be {@code null}.
   */
  @optional public string _changeType;

  /**
   * The updated state of the shared drive. Present if the changeType is drive, the user is still a
   * member of the shared drive, and the shared drive has not been deleted.
   * The value may be {@code null}.
   */
  @optional public Drive _drive;

  /**
   * The ID of the shared drive associated with this change.
   * The value may be {@code null}.
   */
  @optional public string _driveId;

  /**
   * The updated state of the file. Present if the type is file and the file has not been removed
   * from this list of changes.
   * The value may be {@code null}.
   */
  @optional public File _file;

  /**
   * The ID of the file which has changed.
   * The value may be {@code null}.
   */
  @optional public string _fileId;

  /**
   * Identifies what kind of resource this is. Value: the fixed string "drive#change".
   * The value may be {@code null}.
   */
  @optional public string _kind;

  /**
   * Whether the file or shared drive has been removed from this list of changes, for example by
   * deletion or loss of access.
   * The value may be {@code null}.
   */
  @optional public Nullable!bool _removed;

  /**
   * Deprecated - use drive instead.
   * The value may be {@code null}.
   */
  @optional public TeamDrive _teamDrive;

  /**
   * Deprecated - use driveId instead.
   * The value may be {@code null}.
   */
  @optional public string _teamDriveId;

  /**
   * The time of this change (RFC 3339 date-time).
   * The value may be {@code null}.
   */
  @optional public Nullable!SysTime _time;

  /**
   * Deprecated - use changeType instead.
   * The value may be {@code null}.
   */
  @optional public string _type;

  /**
   * The type of the change. Possible values are file and drive.
   * @return value or {@code null} for none
   */
  public string getChangeType() {
    return _changeType;
  }
  /**
   * The type of the change. Possible values are file and drive.
   * @param changeType changeType or {@code null} for none
   */
  public Change setChangeType(string _changeType) {
    this._changeType = _changeType;
    return this;
  }

  /**
   * The updated state of the shared drive. Present if the changeType is drive, the user is still a
   * member of the shared drive, and the shared drive has not been deleted.
   * @return value or {@code null} for none
   */
  public Drive getDrive() {
    return _drive;
  }
  /**
   * The updated state of the shared drive. Present if the changeType is drive, the user is still a
   * member of the shared drive, and the shared drive has not been deleted.
   * @param drive drive or {@code null} for none
   */
  public Change setDrive(Drive _drive) {
    this._drive = _drive;
    return this;
  }

  /**
   * The ID of the shared drive associated with this change.
   * @return value or {@code null} for none
   */
  public string getDriveId() {
    return _driveId;
  }
  /**
   * The ID of the shared drive associated with this change.
   * @param driveId driveId or {@code null} for none
   */
  public Change setDriveId(string _driveId) {
    this._driveId = _driveId;
    return this;
  }

  /**
   * The updated state of the file. Present if the type is file and the file has not been removed
   * from this list of changes.
   * @return value or {@code null} for none
   */
  public File getFile() {
    return _file;
  }
  /**
   * The updated state of the file. Present if the type is file and the file has not been removed
   * from this list of changes.
   * @param file file or {@code null} for none
   */
  public Change setFile(File _file) {
    this._file = _file;
    return this;
  }

  /**
   * The ID of the file which has changed.
   * @return value or {@code null} for none
   */
  public string getFileId() {
    return _fileId;
  }
  /**
   * The ID of the file which has changed.
   * @param fileId fileId or {@code null} for none
   */
  public Change setFileId(string _fileId) {
    this._fileId = _fileId;
    return this;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string "drive#change".
   * @return value or {@code null} for none
   */
  public string getKind() {
    return _kind;
  }
  /**
   * Identifies what kind of resource this is. Value: the fixed string "drive#change".
   * @param kind kind or {@code null} for none
   */
  public Change setKind(string _kind) {
    this._kind = _kind;
    return this;
  }

  /**
   * Whether the file or shared drive has been removed from this list of changes, for example by
   * deletion or loss of access.
   * @return value or {@code null} for none
   */
  public Nullable!bool getRemoved() {
    return _removed;
  }
  /**
   * Whether the file or shared drive has been removed from this list of changes, for example by
   * deletion or loss of access.
   * @param removed removed or {@code null} for none
   */
  public Change setRemoved(Nullable!bool _removed) {
    this._removed = _removed;
    return this;
  }

  /**
   * Deprecated - use drive instead.
   * @return value or {@code null} for none
   */
  public TeamDrive getTeamDrive() {
    return _teamDrive;
  }
  /**
   * Deprecated - use drive instead.
   * @param teamDrive teamDrive or {@code null} for none
   */
  public Change setTeamDrive(TeamDrive _teamDrive) {
    this._teamDrive = _teamDrive;
    return this;
  }

  /**
   * Deprecated - use driveId instead.
   * @return value or {@code null} for none
   */
  public string getTeamDriveId() {
    return _teamDriveId;
  }
  /**
   * Deprecated - use driveId instead.
   * @param teamDriveId teamDriveId or {@code null} for none
   */
  public Change setTeamDriveId(string _teamDriveId) {
    this._teamDriveId = _teamDriveId;
    return this;
  }

  /**
   * The time of this change (RFC 3339 date-time).
   * @return value or {@code null} for none
   */
  public Nullable!SysTime getTime() {
    return _time;
  }
  /**
   * The time of this change (RFC 3339 date-time).
   * @param time time or {@code null} for none
   */
  public Change setTime(Nullable!SysTime _time) {
    this._time = _time;
    return this;
  }

  /**
   * Deprecated - use changeType instead.
   * @return value or {@code null} for none
   */
  public string getType() {
    return _type;
  }
  /**
   * Deprecated - use changeType instead.
   * @param type type or {@code null} for none
   */
  public Change setType(string _type) {
    this._type = _type;
    return this;
  }

}