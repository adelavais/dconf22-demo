/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */
module Google.Apis.Drive.v3.Data.User;

import vibe.data.json: optional;
import std.typecons: Nullable;
import std.datetime : SysTime;
import std.conv: to;

import Google.Apis.Drive.v3.DriveMyNullable;

/**
 * Information about a Drive user.
 *
 * This is the D data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Drive API. For a detailed explanation see:
 *
 *
 * @author Robert Aron.
 */
public struct User {

  /**
   * A plain text displayable name for this user.
   * The value may be {@code null}.
   */
  @optional public string _displayName;

  /**
   * The email address of the user. This may not be present in certain contexts if the user has not
   * made their email address visible to the requester.
   * The value may be {@code null}.
   */
  @optional public string _emailAddress;

  /**
   * Identifies what kind of resource this is. Value: the fixed string "drive#user".
   * The value may be {@code null}.
   */
  @optional public string _kind;

  /**
   * Whether this user is the requesting user.
   * The value may be {@code null}.
   */
  @optional public Nullable!bool _me;

  /**
   * The user's ID as visible in Permission resources.
   * The value may be {@code null}.
   */
  @optional public string _permissionId;

  /**
   * A link to the user's profile photo, if available.
   * The value may be {@code null}.
   */
  @optional public string _photoLink;

  /**
   * A plain text displayable name for this user.
   * @return value or {@code null} for none
   */
  public string getDisplayName() {
    return _displayName;
  }
  /**
   * A plain text displayable name for this user.
   * @param displayName displayName or {@code null} for none
   */
  public User setDisplayName(string _displayName) {
    this._displayName = _displayName;
    return this;
  }

  /**
   * The email address of the user. This may not be present in certain contexts if the user has not
   * made their email address visible to the requester.
   * @return value or {@code null} for none
   */
  public string getEmailAddress() {
    return _emailAddress;
  }
  /**
   * The email address of the user. This may not be present in certain contexts if the user has not
   * made their email address visible to the requester.
   * @param emailAddress emailAddress or {@code null} for none
   */
  public User setEmailAddress(string _emailAddress) {
    this._emailAddress = _emailAddress;
    return this;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string "drive#user".
   * @return value or {@code null} for none
   */
  public string getKind() {
    return _kind;
  }
  /**
   * Identifies what kind of resource this is. Value: the fixed string "drive#user".
   * @param kind kind or {@code null} for none
   */
  public User setKind(string _kind) {
    this._kind = _kind;
    return this;
  }

  /**
   * Whether this user is the requesting user.
   * @return value or {@code null} for none
   */
  public Nullable!bool getMe() {
    return _me;
  }
  /**
   * Whether this user is the requesting user.
   * @param me me or {@code null} for none
   */
  public User setMe(Nullable!bool _me) {
    this._me = _me;
    return this;
  }

  /**
   * The user's ID as visible in Permission resources.
   * @return value or {@code null} for none
   */
  public string getPermissionId() {
    return _permissionId;
  }
  /**
   * The user's ID as visible in Permission resources.
   * @param permissionId permissionId or {@code null} for none
   */
  public User setPermissionId(string _permissionId) {
    this._permissionId = _permissionId;
    return this;
  }

  /**
   * A link to the user's profile photo, if available.
   * @return value or {@code null} for none
   */
  public string getPhotoLink() {
    return _photoLink;
  }
  /**
   * A link to the user's profile photo, if available.
   * @param photoLink photoLink or {@code null} for none
   */
  public User setPhotoLink(string _photoLink) {
    this._photoLink = _photoLink;
    return this;
  }

}