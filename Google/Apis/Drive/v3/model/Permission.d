/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */
module Google.Apis.Drive.v3.Data.Permission;

import vibe.data.json: optional;
import std.typecons: Nullable;
import std.datetime : SysTime;
import std.conv: to;

import Google.Apis.Drive.v3.DriveMyNullable;

/**
 * A permission for a file. A permission grants a user, group, domain or the world access to a file
 * or a folder hierarchy.
 *
 * This is the D data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Drive API. For a detailed explanation see:
 *
 *
 * @author Robert Aron.
 */
public struct Permission {

  /**
   * Whether the permission allows the file to be discovered through search. This is only applicable
   * for permissions of type domain or anyone.
   * The value may be {@code null}.
   */
  @optional public Nullable!bool _allowFileDiscovery;

  /**
   * Whether the account associated with this permission has been deleted. This field only pertains
   * to user and group permissions.
   * The value may be {@code null}.
   */
  @optional public Nullable!bool _deleted;

  /**
   * The "pretty" name of the value of the permission. The following is a list of examples for each
   * type of permission: - user - User's full name, as defined for their Google account, such as
   * "Joe Smith."  - group - Name of the Google Group, such as "The Company Administrators."  -
   * domain - String domain name, such as "thecompany.com."  - anyone - No displayName is present.
   * The value may be {@code null}.
   */
  @optional public string _displayName;

  /**
   * The domain to which this permission refers.
   * The value may be {@code null}.
   */
  @optional public string _domain;

  /**
   * The email address of the user or group to which this permission refers.
   * The value may be {@code null}.
   */
  @optional public string _emailAddress;

  /**
   * The time at which this permission will expire (RFC 3339 date-time). Expiration times have the
   * following restrictions: - They can only be set on user and group permissions  - The time must
   * be in the future  - The time cannot be more than a year in the future
   * The value may be {@code null}.
   */
  @optional public Nullable!SysTime _expirationTime;

  /**
   * The ID of this permission. This is a unique identifier for the grantee, and is published in
   * User resources as permissionId. IDs should be treated as opaque values.
   * The value may be {@code null}.
   */
  @optional public string _id;

  /**
   * Identifies what kind of resource this is. Value: the fixed string "drive#permission".
   * The value may be {@code null}.
   */
  @optional public string _kind;

  /**
   * Details of whether the permissions on this shared drive item are inherited or directly on this
   * item. This is an output-only field which is present only for shared drive items.
   * The value may be {@code null}.
   */
  @optional public PermissionDetailsData[] _permissionDetails;

  /**
   * A link to the user's profile photo, if available.
   * The value may be {@code null}.
   */
  @optional public string _photoLink;

  /**
   * The role granted by this permission. While new values may be supported in the future, the
   * following are currently allowed: - owner  - organizer  - fileOrganizer  - writer  - commenter
   * - reader
   * The value may be {@code null}.
   */
  @optional public string _role;

  /**
   * Deprecated - use permissionDetails instead.
   * The value may be {@code null}.
   */
  @optional public TeamDrivePermissionDetailsData[] _teamDrivePermissionDetails;

  /**
   * The type of the grantee. Valid values are: - user  - group  - domain  - anyone  When creating a
   * permission, if type is user or group, you must provide an emailAddress for the user or group.
   * When type is domain, you must provide a domain. There isn't extra information required for a
   * anyone type.
   * The value may be {@code null}.
   */
  @optional public string _type;

  /**
   * Indicates the view for this permission. Only populated for permissions that belong to a view.
   * published is the only supported value.
   * The value may be {@code null}.
   */
  @optional public string _view;

  /**
   * Whether the permission allows the file to be discovered through search. This is only applicable
   * for permissions of type domain or anyone.
   * @return value or {@code null} for none
   */
  public Nullable!bool getAllowFileDiscovery() {
    return _allowFileDiscovery;
  }
  /**
   * Whether the permission allows the file to be discovered through search. This is only applicable
   * for permissions of type domain or anyone.
   * @param allowFileDiscovery allowFileDiscovery or {@code null} for none
   */
  public Permission setAllowFileDiscovery(Nullable!bool _allowFileDiscovery) {
    this._allowFileDiscovery = _allowFileDiscovery;
    return this;
  }

  /**
   * Whether the account associated with this permission has been deleted. This field only pertains
   * to user and group permissions.
   * @return value or {@code null} for none
   */
  public Nullable!bool getDeleted() {
    return _deleted;
  }
  /**
   * Whether the account associated with this permission has been deleted. This field only pertains
   * to user and group permissions.
   * @param deleted deleted or {@code null} for none
   */
  public Permission setDeleted(Nullable!bool _deleted) {
    this._deleted = _deleted;
    return this;
  }

  /**
   * The "pretty" name of the value of the permission. The following is a list of examples for each
   * type of permission: - user - User's full name, as defined for their Google account, such as
   * "Joe Smith."  - group - Name of the Google Group, such as "The Company Administrators."  -
   * domain - String domain name, such as "thecompany.com."  - anyone - No displayName is present.
   * @return value or {@code null} for none
   */
  public string getDisplayName() {
    return _displayName;
  }
  /**
   * The "pretty" name of the value of the permission. The following is a list of examples for each
   * type of permission: - user - User's full name, as defined for their Google account, such as
   * "Joe Smith."  - group - Name of the Google Group, such as "The Company Administrators."  -
   * domain - String domain name, such as "thecompany.com."  - anyone - No displayName is present.
   * @param displayName displayName or {@code null} for none
   */
  public Permission setDisplayName(string _displayName) {
    this._displayName = _displayName;
    return this;
  }

  /**
   * The domain to which this permission refers.
   * @return value or {@code null} for none
   */
  public string getDomain() {
    return _domain;
  }
  /**
   * The domain to which this permission refers.
   * @param domain domain or {@code null} for none
   */
  public Permission setDomain(string _domain) {
    this._domain = _domain;
    return this;
  }

  /**
   * The email address of the user or group to which this permission refers.
   * @return value or {@code null} for none
   */
  public string getEmailAddress() {
    return _emailAddress;
  }
  /**
   * The email address of the user or group to which this permission refers.
   * @param emailAddress emailAddress or {@code null} for none
   */
  public Permission setEmailAddress(string _emailAddress) {
    this._emailAddress = _emailAddress;
    return this;
  }

  /**
   * The time at which this permission will expire (RFC 3339 date-time). Expiration times have the
   * following restrictions: - They can only be set on user and group permissions  - The time must
   * be in the future  - The time cannot be more than a year in the future
   * @return value or {@code null} for none
   */
  public Nullable!SysTime getExpirationTime() {
    return _expirationTime;
  }
  /**
   * The time at which this permission will expire (RFC 3339 date-time). Expiration times have the
   * following restrictions: - They can only be set on user and group permissions  - The time must
   * be in the future  - The time cannot be more than a year in the future
   * @param expirationTime expirationTime or {@code null} for none
   */
  public Permission setExpirationTime(Nullable!SysTime _expirationTime) {
    this._expirationTime = _expirationTime;
    return this;
  }

  /**
   * The ID of this permission. This is a unique identifier for the grantee, and is published in
   * User resources as permissionId. IDs should be treated as opaque values.
   * @return value or {@code null} for none
   */
  public string getId() {
    return _id;
  }
  /**
   * The ID of this permission. This is a unique identifier for the grantee, and is published in
   * User resources as permissionId. IDs should be treated as opaque values.
   * @param id id or {@code null} for none
   */
  public Permission setId(string _id) {
    this._id = _id;
    return this;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string "drive#permission".
   * @return value or {@code null} for none
   */
  public string getKind() {
    return _kind;
  }
  /**
   * Identifies what kind of resource this is. Value: the fixed string "drive#permission".
   * @param kind kind or {@code null} for none
   */
  public Permission setKind(string _kind) {
    this._kind = _kind;
    return this;
  }

  /**
   * Details of whether the permissions on this shared drive item are inherited or directly on this
   * item. This is an output-only field which is present only for shared drive items.
   * @return value or {@code null} for none
   */
  public PermissionDetailsData[] getPermissionDetails() {
    return _permissionDetails;
  }
  /**
   * Details of whether the permissions on this shared drive item are inherited or directly on this
   * item. This is an output-only field which is present only for shared drive items.
   * @param permissionDetails permissionDetails or {@code null} for none
   */
  public Permission setPermissionDetails(PermissionDetailsData[] _permissionDetails) {
    this._permissionDetails = _permissionDetails;
    return this;
  }

  /**
   * A link to the user's profile photo, if available.
   * @return value or {@code null} for none
   */
  public string getPhotoLink() {
    return _photoLink;
  }
  /**
   * A link to the user's profile photo, if available.
   * @param photoLink photoLink or {@code null} for none
   */
  public Permission setPhotoLink(string _photoLink) {
    this._photoLink = _photoLink;
    return this;
  }

  /**
   * The role granted by this permission. While new values may be supported in the future, the
   * following are currently allowed: - owner  - organizer  - fileOrganizer  - writer  - commenter
   * - reader
   * @return value or {@code null} for none
   */
  public string getRole() {
    return _role;
  }
  /**
   * The role granted by this permission. While new values may be supported in the future, the
   * following are currently allowed: - owner  - organizer  - fileOrganizer  - writer  - commenter
   * - reader
   * @param role role or {@code null} for none
   */
  public Permission setRole(string _role) {
    this._role = _role;
    return this;
  }

  /**
   * Deprecated - use permissionDetails instead.
   * @return value or {@code null} for none
   */
  public TeamDrivePermissionDetailsData[] getTeamDrivePermissionDetails() {
    return _teamDrivePermissionDetails;
  }
  /**
   * Deprecated - use permissionDetails instead.
   * @param teamDrivePermissionDetails teamDrivePermissionDetails or {@code null} for none
   */
  public Permission setTeamDrivePermissionDetails(TeamDrivePermissionDetailsData[] _teamDrivePermissionDetails) {
    this._teamDrivePermissionDetails = _teamDrivePermissionDetails;
    return this;
  }

  /**
   * The type of the grantee. Valid values are: - user  - group  - domain  - anyone  When creating a
   * permission, if type is user or group, you must provide an emailAddress for the user or group.
   * When type is domain, you must provide a domain. There isn't extra information required for a
   * anyone type.
   * @return value or {@code null} for none
   */
  public string getType() {
    return _type;
  }
  /**
   * The type of the grantee. Valid values are: - user  - group  - domain  - anyone  When creating a
   * permission, if type is user or group, you must provide an emailAddress for the user or group.
   * When type is domain, you must provide a domain. There isn't extra information required for a
   * anyone type.
   * @param type type or {@code null} for none
   */
  public Permission setType(string _type) {
    this._type = _type;
    return this;
  }

  /**
   * Indicates the view for this permission. Only populated for permissions that belong to a view.
   * published is the only supported value.
   * @return value or {@code null} for none
   */
  public string getView() {
    return _view;
  }
  /**
   * Indicates the view for this permission. Only populated for permissions that belong to a view.
   * published is the only supported value.
   * @param view view or {@code null} for none
   */
  public Permission setView(string _view) {
    this._view = _view;
    return this;
  }

  /**
   * Model definition for Permission.PermissionDetailsData.
   */
  public struct PermissionDetailsData {

    /**
     * Whether this permission is inherited. This field is always populated. This is an output-only
     * field.
     * The value may be {@code null}.
     */
    @optional public Nullable!bool _inherited;

    /**
     * The ID of the item from which this permission is inherited. This is an output-only field.
     * The value may be {@code null}.
     */
    @optional public string _inheritedFrom;

    /**
     * The permission type for this user. While new values may be added in future, the following are
     * currently possible: - file  - member
     * The value may be {@code null}.
     */
    @optional public string _permissionType;

    /**
     * The primary role for this user. While new values may be added in the future, the following are
     * currently possible: - organizer  - fileOrganizer  - writer  - commenter  - reader
     * The value may be {@code null}.
     */
    @optional public string _role;

    /**
     * Whether this permission is inherited. This field is always populated. This is an output-only
     * field.
     * @return value or {@code null} for none
     */
    public Nullable!bool getInherited() {
      return _inherited;
    }
    /**
     * Whether this permission is inherited. This field is always populated. This is an output-only
     * field.
     * @param inherited inherited or {@code null} for none
     */
    public PermissionDetailsData setInherited(Nullable!bool _inherited) {
      this._inherited = _inherited;
      return this;
    }

    /**
     * The ID of the item from which this permission is inherited. This is an output-only field.
     * @return value or {@code null} for none
     */
    public string getInheritedFrom() {
      return _inheritedFrom;
    }
    /**
     * The ID of the item from which this permission is inherited. This is an output-only field.
     * @param inheritedFrom inheritedFrom or {@code null} for none
     */
    public PermissionDetailsData setInheritedFrom(string _inheritedFrom) {
      this._inheritedFrom = _inheritedFrom;
      return this;
    }

    /**
     * The permission type for this user. While new values may be added in future, the following are
     * currently possible: - file  - member
     * @return value or {@code null} for none
     */
    public string getPermissionType() {
      return _permissionType;
    }
    /**
     * The permission type for this user. While new values may be added in future, the following are
     * currently possible: - file  - member
     * @param permissionType permissionType or {@code null} for none
     */
    public PermissionDetailsData setPermissionType(string _permissionType) {
      this._permissionType = _permissionType;
      return this;
    }

    /**
     * The primary role for this user. While new values may be added in the future, the following are
     * currently possible: - organizer  - fileOrganizer  - writer  - commenter  - reader
     * @return value or {@code null} for none
     */
    public string getRole() {
      return _role;
    }
    /**
     * The primary role for this user. While new values may be added in the future, the following are
     * currently possible: - organizer  - fileOrganizer  - writer  - commenter  - reader
     * @param role role or {@code null} for none
     */
    public PermissionDetailsData setRole(string _role) {
      this._role = _role;
      return this;
    }

  }

  /**
   * Model definition for Permission.TeamDrivePermissionDetailsData.
   */
  public struct TeamDrivePermissionDetailsData {

    /**
     * Deprecated - use permissionDetails/inherited instead.
     * The value may be {@code null}.
     */
    @optional public Nullable!bool _inherited;

    /**
     * Deprecated - use permissionDetails/inheritedFrom instead.
     * The value may be {@code null}.
     */
    @optional public string _inheritedFrom;

    /**
     * Deprecated - use permissionDetails/role instead.
     * The value may be {@code null}.
     */
    @optional public string _role;

    /**
     * Deprecated - use permissionDetails/permissionType instead.
     * The value may be {@code null}.
     */
    @optional public string _teamDrivePermissionType;

    /**
     * Deprecated - use permissionDetails/inherited instead.
     * @return value or {@code null} for none
     */
    public Nullable!bool getInherited() {
      return _inherited;
    }
    /**
     * Deprecated - use permissionDetails/inherited instead.
     * @param inherited inherited or {@code null} for none
     */
    public TeamDrivePermissionDetailsData setInherited(Nullable!bool _inherited) {
      this._inherited = _inherited;
      return this;
    }

    /**
     * Deprecated - use permissionDetails/inheritedFrom instead.
     * @return value or {@code null} for none
     */
    public string getInheritedFrom() {
      return _inheritedFrom;
    }
    /**
     * Deprecated - use permissionDetails/inheritedFrom instead.
     * @param inheritedFrom inheritedFrom or {@code null} for none
     */
    public TeamDrivePermissionDetailsData setInheritedFrom(string _inheritedFrom) {
      this._inheritedFrom = _inheritedFrom;
      return this;
    }

    /**
     * Deprecated - use permissionDetails/role instead.
     * @return value or {@code null} for none
     */
    public string getRole() {
      return _role;
    }
    /**
     * Deprecated - use permissionDetails/role instead.
     * @param role role or {@code null} for none
     */
    public TeamDrivePermissionDetailsData setRole(string _role) {
      this._role = _role;
      return this;
    }

    /**
     * Deprecated - use permissionDetails/permissionType instead.
     * @return value or {@code null} for none
     */
    public string getTeamDrivePermissionType() {
      return _teamDrivePermissionType;
    }
    /**
     * Deprecated - use permissionDetails/permissionType instead.
     * @param teamDrivePermissionType teamDrivePermissionType or {@code null} for none
     */
    public TeamDrivePermissionDetailsData setTeamDrivePermissionType(string _teamDrivePermissionType) {
      this._teamDrivePermissionType = _teamDrivePermissionType;
      return this;
    }

  }

}