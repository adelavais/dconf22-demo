/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */
module Google.Apis.Drive.v3.Data.Channel;

import vibe.data.json: optional;
import std.typecons: Nullable;
import std.datetime : SysTime;
import std.conv: to;

import Google.Apis.Drive.v3.DriveMyNullable;

/**
 * An notification channel used to watch for resource changes.
 *
 * This is the D data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Drive API. For a detailed explanation see:
 *
 *
 * @author Robert Aron.
 */
public struct Channel {

  /**
   * The address where notifications are delivered for this channel.
   * The value may be {@code null}.
   */
  @optional public string _address;

  /**
   * Date and time of notification channel expiration, expressed as a Unix timestamp, in
   * milliseconds. Optional.
   * The value may be {@code null}.
   */
  @optional public MyNullable!long _expiration;

  /**
   * A UUID or similar unique string that identifies this channel.
   * The value may be {@code null}.
   */
  @optional public string _id;

  /**
   * Identifies this as a notification channel used to watch for changes to a resource, which is
   * "api#channel".
   * The value may be {@code null}.
   */
  @optional public string _kind;

  /**
   * Additional parameters controlling delivery channel behavior. Optional.
   * The value may be {@code null}.
   */
  @optional public string[string] _params__;

  /**
   * A Boolean value to indicate whether payload is wanted. Optional.
   * The value may be {@code null}.
   */
  @optional public Nullable!bool _payload;

  /**
   * An opaque ID that identifies the resource being watched on this channel. Stable across
   * different API versions.
   * The value may be {@code null}.
   */
  @optional public string _resourceId;

  /**
   * A version-specific identifier for the watched resource.
   * The value may be {@code null}.
   */
  @optional public string _resourceUri;

  /**
   * An arbitrary string delivered to the target address with each notification delivered over this
   * channel. Optional.
   * The value may be {@code null}.
   */
  @optional public string _token;

  /**
   * The type of delivery mechanism used for this channel. Valid values are "web_hook" (or
   * "webhook"). Both values refer to a channel where Http requests are used to deliver messages.
   * The value may be {@code null}.
   */
  @optional public string _type;

  /**
   * The address where notifications are delivered for this channel.
   * @return value or {@code null} for none
   */
  public string getAddress() {
    return _address;
  }
  /**
   * The address where notifications are delivered for this channel.
   * @param address address or {@code null} for none
   */
  public Channel setAddress(string _address) {
    this._address = _address;
    return this;
  }

  /**
   * Date and time of notification channel expiration, expressed as a Unix timestamp, in
   * milliseconds. Optional.
   * @return value or {@code null} for none
   */
  public MyNullable!long getExpiration() {
    return _expiration;
  }
  /**
   * Date and time of notification channel expiration, expressed as a Unix timestamp, in
   * milliseconds. Optional.
   * @param expiration expiration or {@code null} for none
   */
  public Channel setExpiration(MyNullable!long _expiration) {
    this._expiration = _expiration;
    return this;
  }

  /**
   * A UUID or similar unique string that identifies this channel.
   * @return value or {@code null} for none
   */
  public string getId() {
    return _id;
  }
  /**
   * A UUID or similar unique string that identifies this channel.
   * @param id id or {@code null} for none
   */
  public Channel setId(string _id) {
    this._id = _id;
    return this;
  }

  /**
   * Identifies this as a notification channel used to watch for changes to a resource, which is
   * "api#channel".
   * @return value or {@code null} for none
   */
  public string getKind() {
    return _kind;
  }
  /**
   * Identifies this as a notification channel used to watch for changes to a resource, which is
   * "api#channel".
   * @param kind kind or {@code null} for none
   */
  public Channel setKind(string _kind) {
    this._kind = _kind;
    return this;
  }

  /**
   * Additional parameters controlling delivery channel behavior. Optional.
   * @return value or {@code null} for none
   */
  public string[string] getParams() {
    return _params__;
  }
  /**
   * Additional parameters controlling delivery channel behavior. Optional.
   * @param params__ params__ or {@code null} for none
   */
  public Channel setParams(string[string] _params__) {
    this._params__ = _params__;
    return this;
  }

  /**
   * A Boolean value to indicate whether payload is wanted. Optional.
   * @return value or {@code null} for none
   */
  public Nullable!bool getPayload() {
    return _payload;
  }
  /**
   * A Boolean value to indicate whether payload is wanted. Optional.
   * @param payload payload or {@code null} for none
   */
  public Channel setPayload(Nullable!bool _payload) {
    this._payload = _payload;
    return this;
  }

  /**
   * An opaque ID that identifies the resource being watched on this channel. Stable across
   * different API versions.
   * @return value or {@code null} for none
   */
  public string getResourceId() {
    return _resourceId;
  }
  /**
   * An opaque ID that identifies the resource being watched on this channel. Stable across
   * different API versions.
   * @param resourceId resourceId or {@code null} for none
   */
  public Channel setResourceId(string _resourceId) {
    this._resourceId = _resourceId;
    return this;
  }

  /**
   * A version-specific identifier for the watched resource.
   * @return value or {@code null} for none
   */
  public string getResourceUri() {
    return _resourceUri;
  }
  /**
   * A version-specific identifier for the watched resource.
   * @param resourceUri resourceUri or {@code null} for none
   */
  public Channel setResourceUri(string _resourceUri) {
    this._resourceUri = _resourceUri;
    return this;
  }

  /**
   * An arbitrary string delivered to the target address with each notification delivered over this
   * channel. Optional.
   * @return value or {@code null} for none
   */
  public string getToken() {
    return _token;
  }
  /**
   * An arbitrary string delivered to the target address with each notification delivered over this
   * channel. Optional.
   * @param token token or {@code null} for none
   */
  public Channel setToken(string _token) {
    this._token = _token;
    return this;
  }

  /**
   * The type of delivery mechanism used for this channel. Valid values are "web_hook" (or
   * "webhook"). Both values refer to a channel where Http requests are used to deliver messages.
   * @return value or {@code null} for none
   */
  public string getType() {
    return _type;
  }
  /**
   * The type of delivery mechanism used for this channel. Valid values are "web_hook" (or
   * "webhook"). Both values refer to a channel where Http requests are used to deliver messages.
   * @param type type or {@code null} for none
   */
  public Channel setType(string _type) {
    this._type = _type;
    return this;
  }

}